// Mocks generated by Mockito 5.4.5 from annotations
// in qstore/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:qstore/core/services/local_data_services/hive_service.dart'
    as _i3;
import 'package:qstore/features/home/data/data_sources/local_product_datasource.dart'
    as _i6;
import 'package:qstore/features/home/data/data_sources/remote_product_datasource.dart'
    as _i4;
import 'package:qstore/features/home/data/model/product_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductResponse_0 extends _i1.SmartFake
    implements _i2.ProductResponse {
  _FakeProductResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHiveService_1 extends _i1.SmartFake implements _i3.HiveService {
  _FakeHiveService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteProductDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteProductDataSource extends _i1.Mock
    implements _i4.RemoteProductDataSource {
  MockRemoteProductDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ProductResponse> getProducts(
    int? skip,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [
            skip,
            limit,
          ],
        ),
        returnValue:
            _i5.Future<_i2.ProductResponse>.value(_FakeProductResponse_0(
          this,
          Invocation.method(
            #getProducts,
            [
              skip,
              limit,
            ],
          ),
        )),
      ) as _i5.Future<_i2.ProductResponse>);

  @override
  _i5.Future<_i2.ProductResponse> getSearchedProducts(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSearchedProducts,
          [query],
        ),
        returnValue:
            _i5.Future<_i2.ProductResponse>.value(_FakeProductResponse_0(
          this,
          Invocation.method(
            #getSearchedProducts,
            [query],
          ),
        )),
      ) as _i5.Future<_i2.ProductResponse>);
}

/// A class which mocks [LocalProductDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalProductDataSource extends _i1.Mock
    implements _i6.LocalProductDataSource {
  MockLocalProductDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.HiveService get hiveService => (super.noSuchMethod(
        Invocation.getter(#hiveService),
        returnValue: _FakeHiveService_1(
          this,
          Invocation.getter(#hiveService),
        ),
      ) as _i3.HiveService);

  @override
  _i5.Future<void> cacheProducts(_i2.ProductResponse? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheProducts,
          [response],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
